/**
 * bonds_full_update.gs
 * –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ ¬´Bonds¬ª —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫—É–ø–æ–Ω–æ–≤/–∫–∞—Ä—Ç–æ—á–µ–∫,
 * —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Ñ–∏–∫—Å–∞–º–∏ —Ñ–æ—Ä–º—É–ª.
 */

// ===== –£–ù–ò–ö–ê–õ–¨–ù–´–ï –∑–∞–≥–æ–ª–æ–≤–∫–∏: –¥–≤–∞ —Ä–∏—Å–∫–∞ ‚Äî —Ä—É—á–Ω–æ–π –∏ ¬´–ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º—ã–π¬ª –∏–∑ API =====
const BONDS_HEADERS = [
  // –ë–ª–æ–∫ 1 ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ
  'üìå –†–∏—Å–∫ (—Ä—É—á–Ω.)',          // —á–∏—Å–ª–æ–≤–æ–π, —Ä—É—á–Ω–æ–π —Å–∫–æ—Ä–∏–Ω–≥ 0..N
  '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ò–ò',
  '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
  '–¢–∏–ø –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞',
  'FIGI',
  '–ù–∞–∑–≤–∞–Ω–∏–µ',
  '–ö–æ–ª-–≤–æ',
  '–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞',
  '–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞',
  '–ö—É–ø–æ–Ω, %',
  '–†–∞–∑–º–µ—Ä –∫—É–ø–æ–Ω–∞',
  '–∫—É–ø–æ–Ω/–≥–æ–¥',
  '–¢–∏–ø –∫—É–ø–æ–Ω–∞ (desc)',
  '–°–µ–∫—Ç–æ—Ä',
  '–†–∏—Å–∫ (—É—Ä–æ–≤–µ–Ω—å TCS)',       // —Ç–µ–∫—Å—Ç–æ–≤—ã–π, –∏–∑ API (mapRiskLevel_)

  // –ë–ª–æ–∫ 2 ‚Äî —Ä–∞—Å—á—ë—Ç–Ω—ã–µ
  '–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ',
  '–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å',
  'P/L (—Ä—É–±)',
  'P/L (%)',
  '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∫—É–ø–æ–Ω–Ω–∞—è –≥–æ–¥–æ–≤–∞—è (–ø—Ä–∏–±–ª.)',

  // –ë–ª–æ–∫ 3 ‚Äî –ø—Ä–æ—á–∏–µ/ID/—Å–ª—É–∂–µ–±–Ω—ã–µ
  '–ù–æ–º–∏–Ω–∞–ª',
  '–ù–ö–î',
  '–î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è',
  '–°–ª–µ–¥—É—é—â–∏–π –∫—É–ø–æ–Ω',
  '–í–∞–ª—é—Ç–∞',
  '–¢–∏–∫–µ—Ä',
  'Emitent / ISIN',
  '–õ–æ—Ç',
  '–ë–∏—Ä–∂–µ–≤–æ–π –∫–ª–∞—Å—Å',
  '–ö–ª–∞—Å—Å —Ä–∏—Å–∫–∞ TCS',
  '–í—Ä–µ–º—è —Ü–µ–Ω—ã (PriceTime)'
];

function updateBondsFull() {
  var figis = readInputFigis_();
  if (!figis.length) {
    SpreadsheetApp.getActive().toast('Input –ø—É—Å—Ç: –Ω–µ—Ç FIGI', 'Bonds ‚Ä¢ Full', 5);
    return;
  }

  var bondsInfo  = fetchBondsInfo_(figis);        // –ø—Ä–æ—Ñ–∏–ª—å –æ–±–ª–∏–≥–∞—Ü–∏–∏ (BondBy, –∫—ç—à)
  var mdMap      = fetchBondsMarketData_(figis);  // —Ü–µ–Ω—ã/–≤—Ä–µ–º—è/–ù–ö–î
  var couponsMap = fetchBondsNextCoupons_(figis); // –∫—É–ø–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è (–∫—ç—à)
  var portfolio  = safeFetchAllPortfolios_();     // qty/avg –ø–æ FIGI –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç

  var rows = [];
  figis.forEach(function (figi) {
    var bi  = bondsInfo[figi]  || {};
    var md  = mdMap[figi]      || {};
    var cpn = couponsMap[figi] || {};

    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∫—É–ø–æ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: —Å–æ–±—ã—Ç–∏—è > –∫–∞—Ä—Ç–æ—á–∫–∞
    if (cpn.couponValue != null) bi.couponValue = cpn.couponValue;
    if (cpn.couponsPerYearFromEvent != null) bi.couponsPerYear = cpn.couponsPerYearFromEvent;
    if (!bi.nextCouponDate && cpn.nextCouponDate) bi.nextCouponDate = cpn.nextCouponDate;

    var couponTypeDesc = cpn.couponType ? mapCouponType_(cpn.couponType) : (bi.couponTypeDesc || '');

    // –î–æ—Å—Ç—Ä–æ–∏—Ç—å —Å—Ç–∞–≤–∫—É/–∫—É–ø–æ–Ω –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª—è—Ö
    if ((bi.couponRate == null || bi.couponRate === '') &&
        (bi.couponValue != null && bi.couponsPerYear != null && bi.nominal)) {
      bi.couponRate = (Number(bi.couponValue) * Number(bi.couponsPerYear) / Number(bi.nominal)) * 100;
    }
    if ((bi.couponValue == null || bi.couponValue === '') &&
        (bi.couponRate != null && bi.nominal != null && bi.couponsPerYear != null && Number(bi.couponsPerYear) > 0)) {
      bi.couponValue = Number(bi.nominal) * Number(bi.couponRate) / 100 / Number(bi.couponsPerYear);
    }

    var lastPriceAdj = bondPricePctToCurrency_(md.lastPrice, bi.nominal);

    var posArr = portfolio[figi] || [null]; // –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏)
    posArr.forEach(function (pos) {
      var qty    = pos ? pos.qty : '';
      var avgRaw = pos ? (pos.avg != null ? pos.avg : (pos.avg_fifo != null ? pos.avg_fifo : null)) : null;
      var avgAdj = bondPricePctToCurrency_(avgRaw, bi.nominal);

      rows.push([
        '',                                      // üìå –†–∏—Å–∫ (—Ä—É—á–Ω.)
        '',                                      // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ò–ò
        '',                                      // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        '–û–±–ª–∏–≥–∞—Ü–∏—è',                             // –¢–∏–ø –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        figi,                                    // FIGI
        bi.name || '',                           // –ù–∞–∑–≤–∞–Ω–∏–µ
        qty,                                     // –ö–æ–ª-–≤–æ
        (avgAdj != null ? avgAdj : ''),          // –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞
        (lastPriceAdj != null ? lastPriceAdj : ''), // –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞
        (bi.couponRate != null ? bi.couponRate : ''),   // –ö—É–ø–æ–Ω, %
        (bi.couponValue != null ? bi.couponValue : ''), // –†–∞–∑–º–µ—Ä –∫—É–ø–æ–Ω–∞
        (bi.couponsPerYear != null ? bi.couponsPerYear : ''), // –∫—É–ø–æ–Ω/–≥–æ–¥
        (couponTypeDesc || ''),                  // –¢–∏–ø –∫—É–ø–æ–Ω–∞ (desc)
        (bi.sector || ''),                       // –°–µ–∫—Ç–æ—Ä
        (bi.riskLevelDesc || ''),                // –†–∏—Å–∫ (—É—Ä–æ–≤–µ–Ω—å TCS)

        '', '', '', '', '',                      // —Ä–∞—Å—á—ë—Ç–Ω—ã–µ ‚Äî —Ñ–æ—Ä–º—É–ª—ã –Ω–∏–∂–µ

        (bi.nominal != null ? bi.nominal : ''),  // –ù–æ–º–∏–Ω–∞–ª
        (md.accrued != null ? md.accrued : ''),  // –ù–ö–î
        (bi.maturityDate || ''),                 // –î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è
        (bi.nextCouponDate || ''),               // –°–ª–µ–¥—É—é—â–∏–π –∫—É–ø–æ–Ω
        (bi.currency || ''),                     // –í–∞–ª—é—Ç–∞
        (bi.ticker || ''),                       // –¢–∏–∫–µ—Ä
        (bi.isin || ''),                         // ISIN
        (bi.lot || ''),                          // –õ–æ—Ç
        (bi.classCode || ''),                    // –ë–∏—Ä–∂–µ–≤–æ–π –∫–ª–∞—Å—Å
        (bi.riskClass || ''),                    // –ö–ª–∞—Å—Å —Ä–∏—Å–∫–∞ TCS (raw)
        (md.lastTime || '')                      // –í—Ä–µ–º—è —Ü–µ–Ω—ã
      ]);
    });
  });

  var sh = getOrCreateSheet_('Bonds');
  sh.clear();
  sh.getRange(1, 1, 1, BONDS_HEADERS.length).setValues([BONDS_HEADERS]);
  if (rows.length) {
    sh.getRange(2, 1, rows.length, BONDS_HEADERS.length).setValues(rows);
    applyFormulas_(sh, 2, rows.length);
  }
  sh.autoResizeColumns(1, BONDS_HEADERS.length);
  sh.setFrozenRows(1);
}

/** ===================== FETCHERS (–∏—Å–ø–æ–ª—å–∑—É—é—Ç API-–æ–±—ë—Ä—Ç–∫–∏) ==================== */
function fetchBondsInfo_(figis) {
  var out = {};
  figis.forEach(function (figi) {
    var bi = callInstrumentsBondByFigi_(figi);
    if (!bi) return;

    var nominal        = (bi.nominal != null) ? (qToNumber(bi.nominal) ?? moneyToNumber(bi.nominal)) : null;
    var couponRate     = (bi.couponRate != null) ? qToNumber(bi.couponRate) : null;
    var couponValue    = (bi.couponValue != null) ? moneyToNumber(bi.couponValue) :
                         (bi.couponNominal != null ? moneyToNumber(bi.couponNominal) : null);
    var couponsPerYear = (bi.couponQuantityPerYear != null) ? Number(bi.couponQuantityPerYear) : null;
    var maturityDate   = dateOrEmpty_(tsToIso(bi.maturityDate));
    var nextCouponDate = dateOrEmpty_(tsToIso(bi.nextCouponDate));

    out[figi] = {
      ticker: bi.ticker || '',
      name: bi.name || bi.placementName || '',
      currency: bi.currency || bi.currencyCode || '',
      nominal: nominal,
      couponRate: couponRate,
      couponValue: couponValue,
      couponsPerYear: couponsPerYear,
      couponTypeDesc: mapCouponType_(bi.couponType),
      maturityDate: maturityDate,
      nextCouponDate: nextCouponDate,
      isin: bi.isin || '',
      lot: bi.lot || 1,
      classCode: bi.classCode || '',
      sector: bi.sector || '',
      riskLevelDesc: mapRiskLevel_(bi.riskLevel),
      riskClass: bi.riskLevel || ''
    };
  });
  return out;
}

function fetchBondsNextCoupons_(figis) {
  var now = new Date();
  var fromIso = new Date(now.getTime() - 30*24*3600*1000).toISOString();
  var toIso   = new Date(now.getTime() + 3*365*24*3600*1000).toISOString();
  var map = {};
  figis.forEach(function (figi) {
    try {
      var arr = callInstrumentsGetBondCouponsCached_(figi, fromIso, toIso) || [];
      var future = null, lastPast = null;

      arr.forEach(function (c) {
        var dtIso = tsToIso(c.couponDate || c.coupon_date || c.couponDateLt || c.date);
        if (!dtIso) return;
        var dt = new Date(dtIso);
        var val = moneyToNumber(c.payOneBond || c.pay_one_bond || c.couponValue || c.value);
        var typ = c.couponType || c.coupon_type;
        var per = (c.couponPeriod != null ? Number(c.couponPeriod) :
                  (c.coupon_period != null ? Number(c.coupon_period) : null));
        var rec = { dtIso: dtIso, value: (val != null ? Number(val) : null), type: typ, period: per };
        if (dt.getTime() >= now.getTime()) {
          if (!future || new Date(future.dtIso) > dt) future = rec;
        } else {
          if (!lastPast || new Date(lastPast.dtIso) < dt) lastPast = rec;
        }
      });

      var chosen = future || lastPast;
      if (chosen) {
        var cps = (chosen.period && chosen.period > 0) ? Math.max(1, Math.round(365 / chosen.period)) : null;
        map[figi] = {
          nextCouponDate: dateOrEmpty_(chosen.dtIso),
          couponValue: chosen.value,
          couponType: chosen.type,
          couponPeriodDays: chosen.period,
          couponsPerYearFromEvent: cps
        };
      }
    } catch (e) { /* –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π FIGI */ }
  });
  return map;
}

function fetchBondsMarketData_(figis) {
  var out = {};
  var last = callMarketLastPrices_(figis);
  last.forEach(function (x) {
    out[x.figi] = out[x.figi] || {};
    out[x.figi].lastPrice = (x.lastPrice != null) ? Number(x.lastPrice) : null;
    out[x.figi].lastTime  = x.time || '';
  });
  figis.forEach(function (f) {
    var aci = callMarketAccruedInterestsToday_(f);
    out[f] = out[f] || {};
    out[f].accrued = (aci != null) ? Number(aci) : null;
  });
  return out;
}

function safeFetchAllPortfolios_() {
  try {
    var accounts = callUsersGetAccounts_();
    var map = {};
    accounts.forEach(function (a) {
      var byPortfolio = callPortfolioGetPortfolio_(a.accountId);
      var byPositions = callPortfolioGetPositions_(a.accountId);
      var combined = byPortfolio.concat(byPositions);

      combined.forEach(function (p) {
        if (!p.figi) return;
        var qty = (p.quantity != null) ? Number(p.quantity) : null;
        var avg = (p.avg != null) ? Number(p.avg) :
                  ((p.avg_fifo != null) ? Number(p.avg_fifo) : null);
        map[p.figi] = map[p.figi] || [];
        var exist = map[p.figi].find(function (x) { return x.accountId === a.accountId; });
        if (exist) {
          if (exist.qty == null && qty != null) exist.qty = qty;
          if (exist.avg == null && avg != null) exist.avg = avg;
        } else {
          map[p.figi].push({
            accountId: a.accountId,
            accountName: a.name || '',
            qty: qty,
            avg: avg,
            avg_fifo: (p.avg_fifo != null ? Number(p.avg_fifo) : null)
          });
        }
      });
    });
    return map;
  } catch (e) { return {}; }
}

/** =================== –§–æ—Ä–º—É–ª—ã (–ª–æ–∫–∞–ª—å-aware, ROUND –¥–æ 2 –∑–Ω–∞–∫–æ–≤) =================== */
function applyFormulas_(sh, startRow, numRows) {
  var headers = sh.getRange(1, 1, 1, sh.getLastColumn()).getValues()[0];
  function idx(title) { return headers.indexOf(title) + 1; }
  var locale = SpreadsheetApp.getActive().getSpreadsheetLocale()||'';
  var SEP = (/^ru|^uk|^pl|^de|^fr|^it/i.test(locale)) ? ';' : ',';

  var cQty   = idx('–ö–æ–ª-–≤–æ');
  var cAvg   = idx('–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞');
  var cPrice = idx('–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞');

  var cInv   = idx('–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ');
  var cMkt   = idx('–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å');
  var cPL    = idx('P/L (—Ä—É–±)');
  var cPLPct = idx('P/L (%)');

  var cCupVal = idx('–†–∞–∑–º–µ—Ä –∫—É–ø–æ–Ω–∞');
  var cCupPY  = idx('–∫—É–ø–æ–Ω/–≥–æ–¥');
  var cYield  = idx('–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∫—É–ø–æ–Ω–Ω–∞—è –≥–æ–¥–æ–≤–∞—è (–ø—Ä–∏–±–ª.)');

  function d(from, to){ return from - to; }
  var R2 = function(expr){ return 'ROUND(' + expr + SEP + '2)'; };

  // –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ = Qty * Avg
  sh.getRange(startRow, cInv, numRows, 1)
    .setFormulaR1C1('=IF(OR(LEN(RC['+d(cQty,cInv)+'])=0'+SEP+'LEN(RC['+d(cAvg,cInv)+'])=0)'+SEP+'""'+SEP+ R2('RC['+d(cQty,cInv)+']*RC['+d(cAvg,cInv)+']') +')');

  // –†—ã–Ω–æ—á–Ω–∞—è = Qty * Price
  sh.getRange(startRow, cMkt, numRows, 1)
    .setFormulaR1C1('=IF(OR(LEN(RC['+d(cQty,cMkt)+'])=0'+SEP+'LEN(RC['+d(cPrice,cMkt)+'])=0)'+SEP+'""'+SEP+ R2('RC['+d(cQty,cMkt)+']*RC['+d(cPrice,cMkt)+']') +')');

  // P/L (—Ä—É–±) = –†—ã–Ω–æ—á–Ω–∞—è - –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ
  sh.getRange(startRow, cPL, numRows, 1)
    .setFormulaR1C1('=IF(OR(LEN(RC['+d(cMkt,cPL)+'])=0'+SEP+'LEN(RC['+d(cInv,cPL)+'])=0)'+SEP+'""'+SEP+ R2('RC['+d(cMkt,cPL)+']-RC['+d(cInv,cPL)+']') +')');

  // P/L (%) = P/L / –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ * 100
  sh.getRange(startRow, cPLPct, numRows, 1)
    .setFormulaR1C1('=IF(OR(LEN(RC['+d(cInv,cPLPct)+'])=0'+SEP+'RC['+d(cInv,cPLPct)+']=0'+SEP+'LEN(RC['+d(cPL,cPLPct)+'])=0)'+SEP+'""'+SEP+ R2('(RC['+d(cPL,cPLPct)+']/RC['+d(cInv,cPLPct)+'])*100') +')');

  // –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∫—É–ø–æ–Ω–Ω–∞—è –≥–æ–¥–æ–≤–∞—è (–ø—Ä–∏–±–ª.) = (–†–∞–∑–º–µ—Ä–ö—É–ø–æ–Ω–∞ * –∫—É–ø–æ–Ω/–≥–æ–¥) / –¶–µ–Ω–∞ * 100
  // (–ò–°–ü–†–ê–í–õ–ï–ù–û: LEN –≤–º–µ—Å—Ç–æ –õ–ï–ù)
  sh.getRange(startRow, cYield, numRows, 1)
    .setFormulaR1C1('=IF(OR(LEN(RC['+d(cCupVal,cYield)+'])=0'+SEP+'LEN(RC['+d(cCupPY,cYield)+'])=0'+SEP+'LEN(RC['+d(cPrice,cYield)+'])=0'+SEP+'RC['+d(cPrice,cYield)+']=0)'+SEP+'""'+SEP+ R2('(RC['+d(cCupVal,cYield)+']*RC['+d(cCupPY,cYield)+'])/RC['+d(cPrice,cYield)+']*100') +')');
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞ –ª–∏—Å—Ç–µ ¬´Bonds¬ª —Ç–æ–ª—å–∫–æ —Ä—ã–Ω–æ—á–Ω—ã–µ –ø–æ–ª—è: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞/–ù–ö–î/–í—Ä–µ–º—è —Ü–µ–Ω—ã.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω–≤–µ—Ä—Å–∏—é bondPricePctToCurrency_().
 */
function updateBondPricesOnly() {
  var figis = readInputFigis_();
  if (!figis.length) {
    SpreadsheetApp.getActive().toast('Input –ø—É—Å—Ç: –Ω–µ—Ç FIGI', 'Bonds ‚Ä¢ Prices', 5);
    return;
  }

  var mdBy = {};
  (callMarketLastPrices_(figis) || []).forEach(function (x) {
    mdBy[x.figi] = {
      lastPrice: (x.lastPrice != null) ? Number(x.lastPrice) : null,
      lastTime:  x.time || ''
    };
  });

  figis.forEach(function (f) {
    var aci = callMarketAccruedInterestsToday_(f);
    mdBy[f] = mdBy[f] || {};
    mdBy[f].accrued = (aci != null) ? Number(aci) : null;
  });

  // –ü–æ–ª—É—á–∏–º –Ω–æ–º–∏–Ω–∞–ª—ã (–∫—ç—à —É—Å–∫–æ—Ä–∏—Ç)
  var nominalBy = {};
  figis.forEach(function (f) {
    try {
      var card = callInstrumentsBondByFigi_(f);
      if (card && card.nominal != null) {
        var n = (qToNumber(card.nominal) != null) ? qToNumber(card.nominal) : moneyToNumber(card.nominal);
        if (n != null) nominalBy[f] = Number(n);
      }
    } catch (e) { /* skip */ }
  });

  var sh = SpreadsheetApp.getActive().getSheetByName('Bonds');
  if (!sh) {
    SpreadsheetApp.getActive().toast('–õ–∏—Å—Ç Bonds –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω (—Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ).', 'Bonds ‚Ä¢ Prices', 7);
    return;
  }
  var headers = sh.getRange(1, 1, 1, sh.getLastColumn()).getValues()[0];
  function idx(name){ return headers.indexOf(name) + 1; }

  var colFIGI  = idx('FIGI');
  var colPrice = idx('–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞');
  var colACI   = idx('–ù–ö–î');
  var colTime  = idx('–í—Ä–µ–º—è —Ü–µ–Ω—ã (PriceTime)');
  if (!(colFIGI && colPrice && colACI && colTime)) {
    SpreadsheetApp.getActive().toast('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ FIGI/–¢–µ–∫—É—â–∞—è/–ù–ö–î/–í—Ä–µ–º—è', 'Bonds ‚Ä¢ Prices', 7);
    return;
  }

  var lastRow = sh.getLastRow();
  if (lastRow < 2) return;

  var figiVals = sh.getRange(2, colFIGI, lastRow - 1, 1).getValues().flat();

  var priceArr = [], aciArr = [], timeArr = [];

  figiVals.forEach(function (f) {
    var md = mdBy[f] || {};
    var raw = md.lastPrice;
    var nominal = nominalBy[f];
    var priceRub = (raw != null) ? bondPricePctToCurrency_(raw, nominal) : null;

    console.log('FIGI=' + f + ' nominal=' + (nominal||'') + ' raw=' + (raw||'') + ' priceRub=' + (priceRub||''));

    priceArr.push([priceRub != null ? priceRub : '']);
    aciArr.push([md.accrued != null ? md.accrued : '']);
    timeArr.push([md.lastTime || '']);
  });

  sh.getRange(2, colPrice, priceArr.length, 1).setValues(priceArr);
  sh.getRange(2, colACI,   aciArr.length,   1).setValues(aciArr);
  sh.getRange(2, colTime,  timeArr.length,  1).setValues(timeArr);

  SpreadsheetApp.getActive().toast('–¶–µ–Ω—ã –∏ –ù–ö–î –æ–±–Ω–æ–≤–ª–µ–Ω—ã', 'Bonds ‚Ä¢ Prices', 5);
}

// ====== Dashboard —Å LockService (–Ω–æ–≤–æ–µ) ======
function buildBondsDashboard(){
  var lock = LockService.getScriptLock();
  if (!lock.tryLock(30000)) {
    SpreadsheetApp.getActive().toast('–î—Ä—É–≥–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç Dashboard. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.', 'Dashboard', 5);
    return;
  }
  try {
    var ss = SpreadsheetApp.getActive();
    var src = ss.getSheetByName('Bonds');
    if(!src){ SpreadsheetApp.getActive().toast('–õ–∏—Å—Ç Bonds –Ω–µ –Ω–∞–π–¥–µ–Ω', 'Dashboard', 5); return; }

    var dst = ss.getSheetByName('Dashboard') || ss.insertSheet('Dashboard');
    dst.clear();

    // --- –ò–Ω–¥–µ–∫—Å—ã –∫–æ–ª–æ–Ω–æ–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º ---
    var hdr = src.getRange(1,1,1,src.getLastColumn()).getValues()[0];
    function idx(name){ var i = hdr.indexOf(name); return (i>=0)? (i+1) : 0; }

    var cName    = idx('–ù–∞–∑–≤–∞–Ω–∏–µ');
    var cFIGI    = idx('FIGI');
    var cRiskNum = idx('üìå –†–∏—Å–∫ (—Ä—É—á–Ω.)');      // —Ä—É—á–Ω–æ–π —Ä–∏—Å–∫
    var cSector  = idx('–°–µ–∫—Ç–æ—Ä');
    var cQty     = idx('–ö–æ–ª-–≤–æ');
    var cPrice   = idx('–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞');
    var cNominal = idx('–ù–æ–º–∏–Ω–∞–ª');
    var cCupPY   = idx('–∫—É–ø–æ–Ω/–≥–æ–¥');
    var cCupVal  = idx('–†–∞–∑–º–µ—Ä –∫—É–ø–æ–Ω–∞');
    var cMaturity= idx('–î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è');
    var cNextCp  = idx('–°–ª–µ–¥—É—é—â–∏–π –∫—É–ø–æ–Ω');

    var cMkt     = idx('–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å');
    var cInv     = idx('–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ');
    var cPL      = idx('P/L (—Ä—É–±)');
    var cPLPct   = idx('P/L (%)');

    if(!(cRiskNum && cSector && cMkt && cInv && cPL && cPLPct && cPrice)){
      SpreadsheetApp.getActive().toast('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ (üìå –†–∏—Å–∫ (—Ä—É—á–Ω.)/–°–µ–∫—Ç–æ—Ä/–†—ã–Ω–æ—á–Ω–∞—è/‚Ä¶)', 'Dashboard', 7);
      return;
    }

    var lastRow = src.getLastRow();
    if(lastRow < 2){ SpreadsheetApp.getActive().toast('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–≤–æ–¥–∫–∏', 'Dashboard', 5); return; }

    var rows = src.getRange(2,1,lastRow-1,src.getLastColumn()).getValues();

    // --- –ê–≥—Ä–µ–≥–∞—Ü–∏–∏ ---
    var invested = 0, market = 0, plRub = 0;
    var sectors = {};                       // {sector: sumMarket}
    var riskCnt = { '–ù–∏–∑–∫–∏–π':0, '–°—Ä–µ–¥–Ω–∏–π':0, '–í—ã—Å–æ–∫–∏–π':0 }; // 0‚Äì1, 2‚Äì4, 5+
    var wCouponNum = 0, wCouponDen = 0;

    // YTM: —Å—Ä–µ–¥–Ω–µ–≤–∑–≤–µ—à–µ–Ω–Ω–æ–µ –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ (–ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ)
    var wYtmNum = 0, wYtmDen = 0;
    var scatterRiskYield = [['–†–∏—Å–∫','YTM (%)','–¢—É–ª—Ç–∏–ø']];

    // –ö—É–ø–æ–Ω—ã –ø–æ –º–µ—Å—è—Ü–∞–º (–≥–æ—Ä–∏–∑–æ–Ω—Ç 6 –º–µ—Å—è—Ü–µ–≤)
    var monthAgg = {};
    var today = new Date();
    var horizon = addMonths_(today, 6);
    var strip   = function(d){ return new Date(d.getFullYear(), d.getMonth(), d.getDate()); };
    var r2      = function(x){ return Math.round(Number(x||0)*100)/100; };

    rows.forEach(function(r){
      function val(ci){ return (ci? r[ci-1] : ''); }

      // –†–∏—Å–∫: –±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ä—É—á–Ω–æ–º—É —á–∏—Å–ª—É
      var riskNum = Number(val(cRiskNum));
      if(!isNaN(riskNum)){
        if (riskNum <= 1)      riskCnt['–ù–∏–∑–∫–∏–π']++;
        else if (riskNum <= 4) riskCnt['–°—Ä–µ–¥–Ω–∏–π']++;
        else                   riskCnt['–í—ã—Å–æ–∫–∏–π']++;
      }

      var sec = String(val(cSector) || 'other');
      var mkt = Number(val(cMkt)) || 0;
      var inv = Number(val(cInv)) || 0;
      var pl  = Number(val(cPL))  || 0;

      invested += inv; market += mkt; plRub += pl;
      sectors[sec] = (sectors[sec]||0) + mkt;

      var coupPctAltIdx = idx('–ö—É–ø–æ–Ω, %');
      var coupPctAlt = Number(coupPctAltIdx ? val(coupPctAltIdx) : NaN);
      var coupPctCalc = Number(val(cCupPY) ? (((Number(val(cCupVal))||0) * Number(val(cCupPY))) / (Number(val(cPrice))||0) * 100) : NaN);
      var coupUse = !isNaN(coupPctAlt) ? coupPctAlt : coupPctCalc;
      if(!isNaN(coupUse) && mkt>0){ wCouponNum += (coupUse/100)*mkt; wCouponDen += mkt; }

      // --- YTM (–ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ)
      var price    = Number(val(cPrice));
      var nominal  = Number(val(cNominal));
      var cupPY    = Number(val(cCupPY));
      var cupVal   = Number(val(cCupVal));
      var matStr   = val(cMaturity);
      var name     = String(val(cName) || '');
      var figi     = String(val(cFIGI) || '');
      var yearsToMat = null;

      if(matStr){
        var d = (matStr instanceof Date)? matStr : (isNaN(Date.parse(matStr))? null : new Date(Date.parse(matStr)));
        if(d){ yearsToMat = Math.max(0.25, (strip(d) - strip(today)) / (365*24*3600*1000)); }
      }

      if(!(nominal>0)) nominal = 1000;
      var ytmPct = null;
      if(price>0 && nominal>0 && cupPY>0 && cupVal>=0 && yearsToMat){
        var C = cupVal * cupPY;
        ytmPct = ((C + (nominal - price) / yearsToMat) / ((nominal + price) / 2)) * 100;
        if(isFinite(ytmPct)){
          if(mkt>0){ wYtmNum += (ytmPct/100)*mkt; wYtmDen += mkt; }
          if(!isNaN(riskNum)){
            var tip = name + '\n' + figi + '\nYTM: ' + r2(ytmPct) + '%';
            scatterRiskYield.push([riskNum, r2(ytmPct), tip]);
          }
        } else {
          ytmPct = null;
        }
      }

      // --- –∫—É–ø–æ–Ω—ã –ø–æ –º–µ—Å—è—Ü–∞–º (6 –º–µ—Å)
      var qty = Number(val(cQty)) || 0;
      var nextStr = val(cNextCp);
      if(qty>0 && cupPY>0 && cupVal>0 && nextStr){
        var first = (nextStr instanceof Date)? nextStr : (isNaN(Date.parse(nextStr))? null : new Date(Date.parse(nextStr)));
        if(first){
          var periodDays = Math.max(15, Math.round(365 / cupPY));
          var d2 = strip(first);
          while(d2 <= horizon){
            if(d2 >= strip(today)){
              var key = d2.getFullYear() + '-' + ('0'+(d2.getMonth()+1)).slice(-2);
              monthAgg[key] = (monthAgg[key]||0) + (cupVal * qty);
            }
            d2 = addDays_(d2, periodDays);
          }
        }
      }
    });

    var plPctTotal = invested>0 ? (plRub/invested*100) : 0;
    var wCouponPct = wCouponDen>0 ? (wCouponNum/wCouponDen*100) : 0;
    var wYtmPct    = wYtmDen>0    ? (wYtmNum/wYtmDen*100)       : 0;

    // --- KPI –±–ª–æ–∫ ---
    var kpi = [
      ['–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å','–ó–Ω–∞—á–µ–Ω–∏–µ'],
      ['–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ', round2_(invested)],
      ['–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å', round2_(market)],
      ['P/L (—Ä—É–±)', round2_(plRub)],
      ['P/L (%)', round2_(plPctTotal)],
      ['–°—Ä–µ–¥–Ω–µ–≤–∑–≤. –∫—É–ø–æ–Ω–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (%)', round2_(wCouponPct)],
      ['–°—Ä–µ–¥–Ω–µ–≤–∑–≤. YTM (%)', round2_(wYtmPct)],
      ['–ö—É–ø–æ–Ω—ã –≤ 30 –¥–Ω–µ–π (—à—Ç)', Object.keys(monthAgg).filter(function(k){
        var y = Number(k.slice(0,4)), m = Number(k.slice(5,7))-1;
        var d = new Date(y,m,1); return d <= addMonths_(today,1);
      }).length],
      ['–ö—É–ø–æ–Ω—ã –≤ 30 –¥–Ω–µ–π (‚ÇΩ)', (function(){
        var s=0; Object.keys(monthAgg).forEach(function(k){
          var y = Number(k.slice(0,4)), m = Number(k.slice(5,7))-1;
          var d = new Date(y,m,1); if(d <= addMonths_(today,1)) s += monthAgg[k];
        }); return round2_(s);
      })()]
    ];
    dst.getRange(1,1,kpi.length,2).setValues(kpi);
    dst.getRange(1,1,1,2).setFontWeight('bold');

    // --- –¢–∞–±–ª–∏—Ü–∞ –ø–æ —Ä–∏—Å–∫–∞–º ---
    var riskTable = [
      ['–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∏—Å–∫–∞','–ö–æ–ª-–≤–æ'],
      ['–ù–∏–∑–∫–∏–π',  riskCnt['–ù–∏–∑–∫–∏–π']],
      ['–°—Ä–µ–¥–Ω–∏–π', riskCnt['–°—Ä–µ–¥–Ω–∏–π']],
      ['–í—ã—Å–æ–∫–∏–π', riskCnt['–í—ã—Å–æ–∫–∏–π']]
    ];
    dst.getRange(1,4,riskTable.length,riskTable[0].length).setValues(riskTable).setFontWeight('bold');

    // --- –¢–∞–±–ª–∏—Ü–∞ –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º ---
    var secArr = Object.keys(sectors).sort().map(function(s){ return [s, round2_(sectors[s])]; });
    dst.getRange(1,7,1,2).setValues([['–°–µ–∫—Ç–æ—Ä','–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å']]).setFontWeight('bold');
    if(secArr.length) dst.getRange(2,7,secArr.length,2).setValues(secArr);

    // --- –¢–∞–±–ª–∏—Ü–∞ –ø–æ –≥–æ–¥–∞–º –ø–æ–≥–∞—à–µ–Ω–∏—è ---
    var cMaturity2 = cMaturity;
    var byYear = {};
    if(cMaturity2){
      rows.forEach(function(r){
        var mkt = Number(r[cMkt-1])||0;
        var v = r[cMaturity2-1];
        if(v){
          var d = (v instanceof Date)? v : (isNaN(Date.parse(v))? null : new Date(Date.parse(v)));
          if(d){ var y = d.getFullYear(); byYear[y] = (byYear[y]||0) + mkt; }
        }
      });
    }
    var years = Object.keys(byYear).sort();
    dst.getRange(1,10,1,2).setValues([['–ì–æ–¥ –ø–æ–≥–∞—à–µ–Ω–∏—è','–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å']]).setFontWeight('bold');
    if(years.length){
      var yrArr = years.map(function(y){ return [Number(y), round2_(byYear[y])]; });
      dst.getRange(2,10,yrArr.length,2).setValues(yrArr);
    }

    // --- –¢–∞–±–ª–∏—Ü–∞ –∫—É–ø–æ–Ω–æ–≤ –ø–æ –º–µ—Å—è—Ü–∞–º ---
    var monthsSorted = Object.keys(monthAgg).sort();
    dst.getRange(1,13,1,2).setValues([['–ú–µ—Å—è—Ü','–ö—É–ø–æ–Ω—ã (‚ÇΩ)']]).setFontWeight('bold');
    if(monthsSorted.length){
      var monArr = monthsSorted.map(function(k){ return [k, round2_(monthAgg[k])]; });
      dst.getRange(2,13,monArr.length,2).setValues(monArr);
    }

    // –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã
    dst.getCharts().forEach(function(ch){ dst.removeChart(ch); });

    // –ü–∞–ª–∏—Ç—Ä—ã
    var paletteMain = ['#4F46E5','#22C55E','#EAB308','#EF4444','#06B6D4','#A855F7','#F59E0B','#94A3B8','#10B981','#3B82F6'];
    var paletteRisk = ['#10B981','#EAB308','#EF4444'];

    // –î–∏–∞–≥—Ä–∞–º–º–∞: –†–∏—Å–∫–∏
    var riskRange = dst.getRange(1,4,4,2);
    var riskChart = dst.newChart()
      .setChartType(Charts.ChartType.COLUMN)
      .addRange(riskRange)
      .setPosition(1, 16, 0, 0)
      .setOption('title','–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∏—Å–∫–∞–º (—à—Ç.)')
      .setOption('legend', { position: 'none' })
      .setOption('colors', [paletteRisk[0]])
      .build();
    dst.insertChart(riskChart);

    // –î–∏–∞–≥—Ä–∞–º–º–∞: –°–µ–∫—Ç–æ—Ä–∞
    if(secArr.length){
      var secRange = dst.getRange(1,7,Math.max(2,secArr.length+1),2);
      var pie = dst.newChart()
        .setChartType(Charts.ChartType.PIE)
        .addRange(secRange)
        .setPosition(20, 1, 0, 0)
        .setOption('title','–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ —Å–µ–∫—Ç–æ—Ä–∞–º (—Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)')
        .setOption('legend', { position: 'right' })
        .setOption('pieSliceText', 'percentage')
        .setOption('colors', paletteMain.slice(0, Math.max(3, secArr.length)))
        .build();
      dst.insertChart(pie);
    }

    // –î–∏–∞–≥—Ä–∞–º–º–∞: –ü–æ–≥–∞—à–µ–Ω–∏—è –ø–æ –≥–æ–¥–∞–º
    if(years.length){
      var yrRange = dst.getRange(1,10,Math.max(2,years.length+1),2);
      var matChart = dst.newChart()
        .setChartType(Charts.ChartType.COLUMN)
        .addRange(yrRange)
        .setPosition(20, 7, 0, 0)
        .setOption('title','–°—Ä–æ–∫–∏ –ø–æ–≥–∞—à–µ–Ω–∏—è (—Ä—ã–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å)')
        .setOption('legend', { position: 'none' })
        .setOption('colors', ['#3B82F6'])
        .build();
      dst.insertChart(matChart);
    }

    // –î–∏–∞–≥—Ä–∞–º–º–∞: –ö—É–ø–æ–Ω—ã –ø–æ –º–µ—Å—è—Ü–∞–º
    if(monthsSorted.length){
      var monRange = dst.getRange(1,13,Math.max(2,monthsSorted.length+1),2);
      var monChart = dst.newChart()
        .setChartType(Charts.ChartType.COLUMN)
        .addRange(monRange)
        .setPosition(20, 13, 0, 0)
        .setOption('title','–ì—Ä–∞—Ñ–∏–∫ –∫—É–ø–æ–Ω–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç (6 –º–µ—Å—è—Ü–µ–≤)')
        .setOption('legend', { position: 'none' })
        .setOption('colors', ['#22C55E'])
        .build();
      dst.insertChart(monChart);
    }

    // –î–∏–∞–≥—Ä–∞–º–º–∞: YTM vs –ö—É–ø–æ–Ω–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    var cmpStartRow = Math.max(22, 20 + Math.max(years.length, monthsSorted.length) + 2);
    var cmpData = [
      ['–ú–µ—Ç—Ä–∏–∫–∞','–ó–Ω–∞—á–µ–Ω–∏–µ'],
      ['–°—Ä–µ–¥–Ω–µ–≤–∑–≤. YTM (%)', round2_(wYtmPct)],
      ['–ö—É–ø–æ–Ω–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (%)', round2_(wCouponPct)]
    ];
    dst.getRange(cmpStartRow, 1, cmpData.length, 2).setValues(cmpData).setFontWeight('bold');
    var cmpRange = dst.getRange(cmpStartRow, 1, cmpData.length, 2);
    var cmpChart = dst.newChart()
      .setChartType(Charts.ChartType.COLUMN)
      .addRange(cmpRange)
      .setPosition(cmpStartRow, 4, 0, 0)
      .setOption('title','YTM vs –ö—É–ø–æ–Ω–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (—Å—Ä–µ–¥–Ω–µ–≤–∑–≤., %)')
      .setOption('legend', { position: 'none' })
      .setOption('colors', ['#4F46E5'])
      .build();
    dst.insertChart(cmpChart);

    // –î–∏–∞–≥—Ä–∞–º–º–∞: –†–∏—Å–∫ vs YTM (scatter)
    if(scatterRiskYield.length > 1){
      dst.getRange(cmpStartRow, 7, scatterRiskYield.length, 3).setValues(scatterRiskYield).setFontWeight('bold');
      var scRange = dst.getRange(cmpStartRow, 7, scatterRiskYield.length, 3);
      var scChart = dst.newChart()
        .setChartType(Charts.ChartType.SCATTER)
        .addRange(scRange)
        .setPosition(cmpStartRow, 11, 0, 0)
        .setOption('title','–†–∏—Å–∫ vs –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∫ –ø–æ–≥–∞—à–µ–Ω–∏—é (YTM)')
        .setOption('legend', { position: 'none' })
        .setOption('hAxis', { title: '–†–∏—Å–∫ (–±–∞–ª–ª—ã)' })
        .setOption('vAxis', { title: 'YTM (%)' })
        .setOption('series', { 0: { pointSize: 5 } })
        .build();
      dst.insertChart(scChart);
    }

    dst.autoResizeColumns(1, 20);
    SpreadsheetApp.getActive().toast('Dashboard –æ–±–Ω–æ–≤–ª—ë–Ω: –∫—ç—à, —Ñ–∏–∫—Å —Ñ–æ—Ä–º—É–ª –∏ –ª–æ–∫-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è', 'Dashboard', 4);
  } finally {
    lock.releaseLock();
  }
}

/** helpers */
function addDays_(d, n){ return new Date(d.getFullYear(), d.getMonth(), d.getDate()+n); }
function addMonths_(d, n){ return new Date(d.getFullYear(), d.getMonth()+n, 1); }
